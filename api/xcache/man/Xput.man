.\" Manpage for publishing chunks
.TH Xput 8 "05 May 2015" "1.0" "XIA Manual Pages"
.SH NAME
XputChunk, XputFile, XputBuffer \- Content Publishing Functions.
.SH SYNOPSIS
.nf
.B "#include <xcache.h>"
.sp
.BR "int XputChunk(XcacheHandle *h, const void *data, size_t length,"
.BR "    sockaddr_x *info)"
.BR "int XputFile(XcacheHandle *h, const char *filename, size_t chunkSize,"
.BR "    sockaddr_x **info)"
.BR "int XputBuffer(XcacheHandle *h, const void *data, size_t length, size_t chunkSize,"
.BR "    sockaddr_x **info)"
.fi
.SH DESCRIPTION
The functions in Xput family publish content to the XIA network. The
argument
.I h
must be initialized by calling the function
.B XcacheHandleInit().

.B XputChunk()
publishes a single chunk of length
.I length
, containing data
.I data.

.B XputFile()
publishes content from file
.I filename
while
.B XputBuffer()
publishes content from buffer
.I data
of total length
.I length.
Both the functions publish chunks of size
.I chunkSize.
The addresses of the chunks published are filled into
.I info.

.SH RETURN VALUE
On success, all these functions return number of chunks
published. Return value 0 does not indicate any error. On failure,
these functions return -1 and errno is set appropriately.

.SH ERRORS
.B ENOTCONN
XcacheSock is not connected.

.B EHOSTDOWN
Xcache is not running.
.B
.\".SH NOTES

.SH EXAMPLE
.nf
#include <xcache.h>
#include <stdio.h>

int main(void)
{
	char buffer[1024];
	XcacheHandle h;
	int n_chunks;

	if (XcacheHandleInit(&h) < 0) {
		perror("XcacheHandleInit");
		return -1;
	}

	memset(buffer, 0, sizeof(buffer));

	if((n_chunks = XputBuffer(h, buffer, 1024, 100, &info)) < 0) {
		perror(XputBuffer());
	} else {
		printf("Published %d chunks successfully!\\n", n_chunks);
	}

	XcacheHandleDestroy(&h);
}
.fi
.SH SEE ALSO
.B "XcacheHandle(8),"
.B "Xput(8),"
.B "Xget(8)"
.SH AUTHOR
Harshad Shirwadkar <harshad@cmu.edu>
