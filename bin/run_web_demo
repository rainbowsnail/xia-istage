#!/bin/bash
#
# Copyright 2012 Carnegie Mellon University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


NAME=`basename $0`
VERBOSE=0
RUN_PROXY=1
RUN_SERVICES=1

SERVICES="webserver.py vs hello_service.py stock_service.py"
PROXY="proxy.py"

# find the root of the XIA source tree
# assumes this script is in a directory off the parent of the XIA tree
# and that the services it starts are rooted off of the same location
#  so XIADIR would be /xia-core assuming the script were /xia-core/tools/run_demo
XIADIR="$(dirname "$(cd "$(dirname "$0")" && pwd)")" 

# set this just in case user doesn't have it in their environment
# can be removed once libraries are installed in correct paths
export PYTHON_PATH=$XIADIR/api/lib


is_running()
{
	RUNNING=`ps aux | grep $1 | grep -v grep `
	[ "$RUNNING" != "" ]
}

check_svcs()
{
	for svc in $@
	do
		status="stopped"
		is_running $svc
		[ $? -eq 0 ] && status="running"
		printf "%-16s: %s\n" $svc $status
	done
}

check_services()
{
	printf "XIA Demo Service Status\n"
	[ $RUN_PROXY == 1 ] && check_svcs $PROXY
	[ $RUN_SERVICES == 1 ] && check_svcs $SERVICES
}

stop_services()
{
	printf "Stopping XIA Demo Services\n"
	for svc in $SERVICES $PROXY
	do
		killall -9 $svc &> /dev/null
	done
}

start_services()
{
	printf "Starting XIA Demo Services\n"

	is_running "click"
	if [ $? -ne 0 ]; then
		printf "Click is not running, aborting...\n"
		exit 1
	fi

	exec 3>&1  # save stdout handle
	if [ $VERBOSE -eq 0 ]; then
		exec &> /dev/null
	fi

	cd $XIADIR/applications/web
	if [ $RUN_PROXY == 1 ]; then
		./proxy.py 8080 &
	fi
	if [ $RUN_SERVICES == 1 ]; then
		./webserver.py &
		sleep 4

		cd $XIADIR/applications/demo/web_demo
		./stock_service.py &
		./hello_service.py & 

		cd $XIADIR/applications/demo/web_demo
		./vs resources/video.ogv &
		sleep 3  # need this otherwise it doesn't work
	fi
}

help ()
{
	cat << EOH

usage: $NAME [-psqv] [start|stop|restart]
where:
  -p only starts only the XIA proxy service (default is start everything)
  -s starts all services except for the proxy
  -q runs click silently
  -v prints click debug messages to stdout (default)

  start   - starts the demo services if not already running
  stop    - stops the demo services
  restart - stops then starts the demo services
  check   - print service status

EOH
	exit 0
}

while getopts ":psqvh" opt; do
	case $opt in
		p)
			RUN_PROXY="1"
			RUN_SERVICES="0"
			;;
		s)
			RUN_SERVICES="1"
			RUN_PROXY="0"
			;;	
		q)
			VERBOSE="0"
			;;
		v)
			VERBOSE="1"
			;;
		h)
			help
			;;
		\?)
			printf "\nInvalid option: -$OPTARG\n" >&2
			help
			;;
	esac
done

shift $((OPTIND-1))

case $1 in
	start)
		start_services
		[ $VERBOSE == 0 ] && exec 1>&3
		sleep 3
		check_services
		;;
	stop)
		stop_services
		;;
	restart|reload)
		stop_services
		sleep 1
		start_services
		[ $VERBOSE == 0 ] && exec 1>&3
		check_services
		;;
	check)
		check_services
		;;
	*)
		printf "\nInvalid command: -$1\n" >&2
		help
		;;
esac

